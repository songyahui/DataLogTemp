S(1).S(2).S(3).S(4).S(5).S(6).S(7).
Start(1).End(4). End(5). End (6). End (7).

transition (1, 2).
transition (1, 3).

transition (2, 4).
transition (2, 5).

transition (3, 6).
transition (3, 7).

P (1). P (2). P (3). P (4). P (5). P (6). P (7). 

// (1) ==> (2)  ==> (4)
//         (2)  ==> (5)
// (1) ==> (3)  ==> (6) 
//         (3)  ==> (7)

.decl S(x:number)
.decl End(x:number)
.decl Start(x:number)
.decl P(x:number) 

.decl transition(x:number, y:number)

.decl Globally(x:number)    // Exist Globally
.decl AG(x:number)         // Exist Globally
.decl NotGlobally(x:number)


Globally (x) :- End(x), P(x). 
Globally (x) :- transition(x, y), P(x), Globally(y). 

NotGlobally (x) :- P(x), transition(x, y), NotGlobally (y).
NotGlobally (x) :- S(x), !P(x). 


AG(x) :- Start(x), ! NotGlobally(x).

.output AG(IO=stdout)  
